name: CI

on:
  push:
    branches:
      - main
      - link-test-support
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  macos:
    name: macOS
    runs-on: macos-14
    strategy:
      matrix:
        config: [Debug, Release]
        xcode: ['15.4', '16.0']
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Skip macro validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Available simulators
        run: xcrun simctl list devices available
      # - name: Run tests
      #   run: make test-swift
      # - name: Build platforms ${{ matrix.config }}
      #   run: CONFIG=${{ matrix.config }} make build-all-platforms
      - name: Integration tests 
        if: ${{ matrix.config }} == 'Debug'
        run: make test-integration
      - name: Build for library evolution
        if: ${{ matrix.config }} == 'Release'
        run: make build-for-library-evolution

  # ubuntu:
  #   strategy:
  #     matrix:
  #       swift:
  #         - '5.10'
  #   name: Ubuntu (Swift ${{ matrix.swift }})
  #   runs-on: ubuntu-latest
  #   container: swift:${{ matrix.swift }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run tests
  #       run: swift test --parallel
  #     - name: Run tests (release)
  #       run: swift test -c release --parallel

  wasm:
    name: SwiftWasm
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - toolchain: swift-DEVELOPMENT-SNAPSHOT-2024-07-08-a
            swift-sdk: swift-wasm-DEVELOPMENT-SNAPSHOT-2024-07-09-a
    steps:
      - uses: actions/checkout@v4
      - uses: bytecodealliance/actions/wasmtime/setup@v1
      - name: Install Swift and Swift SDK for WebAssembly
        run: |
          PREFIX=/opt/swift
          SWIFT_TOOLCHAIN_TAG="${{ matrix.toolchain }}"
          SWIFT_SDK_TAG="${{ matrix.swift-sdk }}"
          set -ex
          curl -f -o /tmp/swift.tar.gz "https://download.swift.org/development/ubuntu2204/$SWIFT_TOOLCHAIN_TAG/$SWIFT_TOOLCHAIN_TAG-ubuntu22.04.tar.gz"
          sudo mkdir -p $PREFIX; sudo tar -xzf /tmp/swift.tar.gz -C $PREFIX --strip-component 1
          $PREFIX/usr/bin/swift experimental-sdk install "https://github.com/swiftwasm/swift/releases/download/$SWIFT_SDK_TAG/$SWIFT_SDK_TAG-wasm32-unknown-wasi.artifactbundle.zip"
          echo "$PREFIX/usr/bin" >> $GITHUB_PATH
      - name: Build tests
        run: swift build --swift-sdk wasm32-unknown-wasi --build-tests -Xlinker -z -Xlinker stack-size=$((1024 * 1024))
      - name: Run tests
        run: wasmtime --dir . .build/debug/swift-dependenciesPackageTests.wasm

  # windows:
  #   name: Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: compnerd/gha-setup-swift@main
  #       with:
  #         branch: swift-5.10-release
  #         tag: 5.10-RELEASE
  #
  #     - uses: actions/checkout@v4
  #     - name: Run tests
  #       run: swift test
  #     - name: Run tests (release)
  #       run: swift test -c release
